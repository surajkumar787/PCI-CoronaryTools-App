/*----------------------------------------------------
 |   This file was generated by Sense Composer 2.0   |
 |  Do not modify the Sense Composer Generated Code  |
 ----------------------------------------------------*/
#pragma once

#include <Sense.h>
#include <ExperienceIdentity.h>

#include "countdowncontrol.h"
#include "arrowcontrol.h"

using namespace Sense;
using namespace Sense::ExperienceIdentity;

class SmartSuiteTopGuidanceStbContrast : public Control
{
public:

	SmartSuiteTopGuidanceStbContrast(Control &parent)
	:
		Control(parent)
		#pragma region Sense Composer (do not modify)
	,	control          ((Control&)*this)
	,	spacer           (control)
	,	spacer2          (control)
	,	stentboostProgress(spacer2)
	,	ArrowControl     (spacer2)
	,	contrastProgress (spacer2)
	,	spacer3          (control)
		#pragma endregion
	{
		#pragma region Sense Composer (do not modify)
		layoutUpdateBegin();
		size                             = Size(952, 564);
		control.position                 = Point(8, 0);
		control.size                     = Size(952, 564);
		spacer.size                      = Size(952, 190);
		spacer.layout                    = Layout::Fixed1d;
		spacer2.position                 = Point(149, 198);
		spacer2.size                     = Size(655, 304);
		spacer2.layout                   = Layout::Fixed2d;
		spacer2.layoutSpacing            = 0;
		spacer2.layoutOrientation        = Orientation::Horizontal;
		//stentboostProgress.composerClass = Control;
		stentboostProgress.name          = L"stentboostProgress";
		stentboostProgress.size          = Size(296, 304);
		stentboostProgress.layout        = Layout::Fill;
		stentboostProgress.layoutOrientation = Orientation::Horizontal;
		//ArrowControl.composerClass     = Control;
		ArrowControl.name                = L"ArrowControl";
		ArrowControl.position            = Point(296, 0);
		ArrowControl.size                = Size(64, 224);
		ArrowControl.layout              = Layout::Fixed1d;
		ArrowControl.layoutOuterMargin   = Margin(0, 0, 0, 80);
		//contrastProgress.composerClass = Control;
		contrastProgress.name            = L"contrastProgress";
		contrastProgress.position        = Point(360, 0);
		contrastProgress.size            = Size(295, 304);
		contrastProgress.layout          = Layout::Fill;
		contrastProgress.layoutOrientation = Orientation::Horizontal;
		spacer3.position                 = Point(0, 510);
		spacer3.size                     = Size(952, 54);
		spacer3.layout                   = Layout::Fill;
		layoutUpdateEnd();
		#pragma endregion
	}

	#pragma region Sense Composer (do not modify)
	private:   Control           control;
	private:   Spacer            spacer;
	private:   Spacer            spacer2;
	public:    Pci::Core::CountDownControl stentboostProgress;
	public:    Pci::Core::ArrowControl ArrowControl;
	public:    Pci::Core::CountDownControl contrastProgress;
	private:   Spacer            spacer3;
	#pragma endregion

private:

	SmartSuiteTopGuidanceStbContrast(const SmartSuiteTopGuidanceStbContrast&);
	SmartSuiteTopGuidanceStbContrast& operator=(const SmartSuiteTopGuidanceStbContrast&);
};


