/*----------------------------------------------------
 |   This file was generated by Sense Composer 2.0   |
 |  Do not modify the Sense Composer Generated Code  |
 ----------------------------------------------------*/
#pragma once

#include <Sense.h>
#include <ExperienceIdentity.h>

#include "ViewType.h"
#include "Translation.h"

using namespace Sense;
using namespace Sense::ExperienceIdentity;

using  namespace Pci::Core;

namespace Pci { namespace Core { namespace UI
{

class StbImageSelectViewer : public Control
{
public:

    StbImageSelectViewer(Control& parent, ViewType type)
		:
		Control (parent)
		#pragma region Sense Composer (do not modify)
	,	spacer           (*this)
	,	selectedImageLabel(spacer)
	,	imageViewer      (spacer, ViewType::SmartSuite19Inch)
	,	separator        (spacer)
	,	spacer2          (*this)
	,	panel            (spacer2)
	,	label            (panel)
	,	guidanceTextLabel(panel)
	,	spacer3          ((Control&)spacer2)
	,	pictorialListControl(spacer2, type)
		#pragma endregion
	{
		#pragma region Sense Composer (do not modify)
		layoutUpdateBegin();
		name                             = L"StbContrastFrameSelectViewer";
		size                             = Size(990, 992);
		layoutSpacing                    = 0;
		spacer.size                      = Size(990, 585);
		spacer.layout                    = Layout::Fixed1d;
		selectedImageLabel.name          = L"selectedImageLabel";
		selectedImageLabel.position      = Point(0, 32);
		selectedImageLabel.size          = Size(990, 40);
		selectedImageLabel.font          = Font(L"Philips Healthcare Font", 30, true, false, false, false, Font::Antialias::High);
		selectedImageLabel.layout        = Layout::Fixed2d;
		selectedImageLabel.layoutOuterMargin = Margin(0, 32, 0, 0);
		selectedImageLabel.text          = L"Image X";
		selectedImageLabel.color         = Palette::Gray070;
		selectedImageLabel.horizontalAlign = HAlign::Center;
		selectedImageLabel.verticalAlign = VAlign::Middle;
		//imageViewer.composerClass      = Control;
		imageViewer.name                 = L"imageViewer";
		imageViewer.position             = Point(245, 85);
		imageViewer.size                 = Size(500, 500);
		imageViewer.layoutUseSpacing     = false;
		imageViewer.layout               = Layout::Fixed2d;
		imageViewer.layoutOuterMargin    = Margin(0, 13, 0, 0);
		separator.position               = Point(10, 585);
		separator.size                   = Size(970, 0);
		separator.layout                 = Layout::Fill;
		separator.layoutOuterMargin      = Margin(10, 0, 10, 0);
		separator.color2                 = Color::fromRgb(61, 61, 61);
		spacer2.position                 = Point(0, 585);
		spacer2.size                     = Size(990, 407);
		spacer2.layout                   = Layout::Fill;
		panel.position                   = Point(0, 16);
		panel.size                       = Size(990, 120);
		panel.layoutUseSpacing           = false;
		panel.layout                     = Layout::Fixed1d;
		panel.layoutOuterMargin          = Margin(0, 16, 0, 0);
		panel.layoutSpacing              = 12;
		panel.layoutOrientation          = Orientation::Horizontal;
		panel.border                     = Margin(0, 0, 0, 0);
		panel.edge                       = Margin(0, 0, 0, 0);
		panel.color                      = Palette::Transparent * 0.00;
		label.position                   = Point(14, 0);
		label.size                       = Size(32, 120);
		label.layout                     = Layout::Fixed1d;
		label.layoutOuterMargin          = Margin(14, 0, 0, 0);
		label.text                       = L"";
		label.color                      = Palette::Transparent * 0.00;
		label.image                      = Icons::Information;
		guidanceTextLabel.name           = L"guidanceTextLabel";
		guidanceTextLabel.position       = Point(58, 0);
		guidanceTextLabel.size           = Size(922, 120);
		guidanceTextLabel.font           = Font(L"Philips Healthcare Font", 30, true, false, false, false, Font::Antialias::High);
		guidanceTextLabel.layout         = Layout::Fill;
		guidanceTextLabel.layoutOuterMargin = Margin(0, 0, 10, 0);
		guidanceTextLabel.text           = ::Localization::Translation::IDS_UseTSMToSelectDifferentImage;    //L"Use the navigation buttons on the touch screen module to select a different image";
		guidanceTextLabel.textType       = TextType::WordWrap;
		guidanceTextLabel.color          = Palette::Gray070;
		spacer3.position                 = Point(0, 136);
		spacer3.size                     = Size(990, 42);
		spacer3.layoutUseSpacing         = false;
		spacer3.layout                   = Layout::Fill;
		//pictorialListControl.composerClass = Control;
		pictorialListControl.name        = L"pictorialListControl";
		pictorialListControl.position    = Point(10, 178);
		pictorialListControl.size        = Size(970, 229);
		pictorialListControl.layout      = Layout::Fixed1d;
		pictorialListControl.layoutOuterMargin = Margin(10, 0, 10, 0);
		layoutUpdateEnd();
		#pragma endregion
	}

	#pragma region Sense Composer (do not modify)
	private:   Spacer            spacer;
	public:    Label             selectedImageLabel;
	public:    StbMarkersViewer  imageViewer;
	private:   Separator         separator;
	private:   Spacer            spacer2;
	private:   Panel             panel;
	private:   Label             label;
	public:    Label             guidanceTextLabel;
	private:   Spacer            spacer3;
	public:    StbPictorialListControl pictorialListControl;
	#pragma endregion

private:

    StbImageSelectViewer(const StbImageSelectViewer&);
    StbImageSelectViewer& operator=(const StbImageSelectViewer&);
};
}}}



