/*----------------------------------------------------
 |   This file was generated by Sense Composer 2.0   |
 |  Do not modify the Sense Composer Generated Code  |
 ----------------------------------------------------*/
#pragma once

#include <Sense.h>
#include <ExperienceIdentity.h>
#include "MenuButtonAllura.h"
#include "AlluraSeparator.h"

namespace Pci { namespace Core
{
using namespace Sense;
using namespace Sense::ExperienceIdentity;

class MainAlluraView : public Control
{
public:

	MainAlluraView(Control &parent)
	:
		Control(parent)
		#pragma region Sense Composer (do not modify)
	,	panelTop         (*this)
	,	helpMenu         (panelTop)
	,	systemMenu       (panelTop)
	,	side             (*this)
	,	separator        (side, AlluraSeparator::SeparatorStyle::Full)
	,	fmDisconnect     (side)
	,	labelCoregInfo   (side)
	,	stbMarkerImage   (side)
	,	spacer           (side)
	,	labelMessageArea1(spacer)
	,	labelMessageArea2(spacer)
	,	patientPanel     (*this)
	,	patientName      (patientPanel)
	,	main             ((Control&)*this)
		#pragma endregion
	{
		#pragma region Sense Composer (do not modify)
		layoutUpdateBegin();
		size                             = Size(1280, 1024);
		panelTop.name                    = L"panelTop";
		panelTop.position                = Point(257, 0);
		panelTop.size                    = Size(1023, 24);
		panelTop.border                  = Margin(0, 0, 0, 0);
		panelTop.edge                    = Margin(0, 0, 0, 0);
		panelTop.color                   = Color::fromRgb(107, 107, 107);
		//helpMenu.composerClass         = Control;
		helpMenu.name                    = L"helpMenu";
		helpMenu.position                = Point(944, 0);
		helpMenu.size                    = Size(80, 24);
		helpMenu.font                    = Font(L"Philips Healthcare Font", 16, true, false, false, false, Font::Antialias::High);
		//systemMenu.composerClass       = Control;
		systemMenu.name                  = L"systemMenu";
		systemMenu.position              = Point(856, 0);
		systemMenu.size                  = Size(80, 24);
		systemMenu.font                  = Font(L"Philips Healthcare Font", 16, true, false, false, false, Font::Antialias::High);
		side.name                        = L"side";
		side.position                    = Point(0, 24);
		side.size                        = Size(257, 1000);
		side.border                      = Margin(0, 0, 1, 0);
		side.edge                        = Margin(0, 0, 0, 0);
		side.colorEdge                   = Color::fromRgb(0, 0, 0);
		side.color                       = Color::fromRgb(107, 107, 107);
		//separator.composerClass        = Control;
		separator.name                   = L"separator";
		separator.position               = Point(0, 943);
		separator.size                   = Size(256, 13);
		fmDisconnect.name                = L"fmDisconnect";
		fmDisconnect.position            = Point(16, 960);
		fmDisconnect.size                = Size(32, 32);
		fmDisconnect.image               = Icons::RemoteConnectivityOff;
		labelCoregInfo.name              = L"labelCoregInfo";
		labelCoregInfo.position          = Point(8, 672);
		labelCoregInfo.size              = Size(240, 90);
		labelCoregInfo.font              = Font(L"Philips Healthcare Font", 18, false, false, false, false, Font::Antialias::High);
		labelCoregInfo.text              = L"";
		labelCoregInfo.textType          = TextType::WordWrap;
		labelCoregInfo.verticalAlign     = VAlign::Middle;
		stbMarkerImage.name              = L"stbMarkerImage";
		stbMarkerImage.size              = Size(256, 256);
		spacer.position                  = Point(8, 762);
		spacer.size                      = Size(240, 180);
		spacer.layoutUseSpacing          = false;
		labelMessageArea1.name           = L"labelMessageArea1";
		labelMessageArea1.size           = Size(240, 90);
		labelMessageArea1.font           = Font(L"Philips Healthcare Font", 18, false, false, false, false, Font::Antialias::High);
		labelMessageArea1.layoutUseSpacing = false;
		labelMessageArea1.layout         = Layout::Fill;
		labelMessageArea1.text           = L"";
		labelMessageArea1.textType       = TextType::WordWrap;
		labelMessageArea1.verticalAlign  = VAlign::Middle;
		labelMessageArea2.name           = L"labelMessageArea2";
		labelMessageArea2.position       = Point(0, 90);
		labelMessageArea2.size           = Size(240, 90);
		labelMessageArea2.font           = Font(L"Philips Healthcare Font", 18, false, false, false, false, Font::Antialias::High);
		labelMessageArea2.layoutUseSpacing = false;
		labelMessageArea2.layout         = Layout::Fill;
		labelMessageArea2.text           = L"";
		labelMessageArea2.textType       = TextType::WordWrap;
		patientPanel.name                = L"patientPanel";
		patientPanel.size                = Size(257, 24);
		patientPanel.border              = Margin(0, 0, 1, 0);
		patientPanel.edge                = Margin(0, 0, 0, 0);
		patientPanel.color               = Color::fromRgb(145, 145, 145);
		patientName.name                 = L"patientName";
		patientName.position             = Point(10, 1);
		patientName.size                 = Size(246, 21);
		patientName.font                 = Font(L"Philips Healthcare Font", 16, true, false, false, false, Font::Antialias::Low);
		patientName.text                 = L"LASTNAME, FirstName";
		patientName.color                = Palette::Black;
		patientName.verticalAlign        = VAlign::Middle;
		main.name                        = L"main";
		main.position                    = Point(257, 24);
		main.size                        = Size(1000, 1000);
		layoutUpdateEnd();
		#pragma endregion
	}

	#pragma region Sense Composer (do not modify)
	public:    Panel             panelTop;
	public:    MenuButtonAllura  helpMenu;
	public:    MenuButtonAllura  systemMenu;
	public:    Panel             side;
	public:    AlluraSeparator   separator;
	public:    Label             fmDisconnect;
	public:    Label             labelCoregInfo;
	public:    Control           stbMarkerImage;
	private:   Spacer            spacer;
	public:    Label             labelMessageArea1;
	public:    Label             labelMessageArea2;
	public:    Panel             patientPanel;
	public:    Label             patientName;
	public:    Control           main;
	#pragma endregion

private:

	MainAlluraView(const MainAlluraView&);
	MainAlluraView& operator=(const MainAlluraView&);
};

}}
