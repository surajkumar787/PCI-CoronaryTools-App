/*----------------------------------------------------
 |   This file was generated by Sense Composer 2.0   |
 |  Do not modify the Sense Composer Generated Code  |
 ----------------------------------------------------*/
#pragma once

#include <Sense.h>
#include <ExperienceIdentity.h>
#include "CrmThumbnail.h"
#include "PciXrayGeometryControl.h"
#include "PciThumbnail.h"

namespace Pci { namespace Core { namespace UI
{
using namespace Sense;
using namespace Sense::ExperienceIdentity;
using namespace Pci::Core;
using namespace PciSuite;

class SmartSuite19InchGuidanceUi : public Control
{
public:

	SmartSuite19InchGuidanceUi(Control &parent)
	:
		Control(parent)
		#pragma region Sense Composer (do not modify)
	,	panelMessage     (*this)
	,	panelImage       (panelMessage)
	,	picture          (panelImage)
	,	labelIcon        (picture)
	,	panelText        (panelMessage)
	,	labelMessage     (panelText)
	,	labelMessageSubtext(panelText)
	,	labelGuidance    (panelText)
	,	separator        (panelMessage)
	,	separator2       (panelMessage)
	,	labelHeader      (*this)
	,	processing       (*this)
	,	imageRoadmap     (*this)
	,	imageHeader      (*this)
	,	positionTarget   (*this, ViewType::SmartSuite19Inch)
		#pragma endregion
	{
		#pragma region Sense Composer (do not modify)
		layoutUpdateBegin();
		name                             = L"SmartSuite19InchGuidanceUi";
		size                             = Size(984, 996);
		font                             = Font(L"Philips Healthcare Font", 34, false, false, false, false, Font::Antialias::High);
		panelMessage.name                = L"panelMessage";
		panelMessage.position            = Point(0, 584);
		panelMessage.size                = Size(980, 304);
		panelMessage.layoutSpacing       = 0;
		panelMessage.layoutOrientation   = Orientation::Horizontal;
		panelMessage.border              = Margin(0, 0, 0, 0);
		panelMessage.edge                = Margin(0, 0, 0, 0);
		panelMessage.colorBorder         = Color::fromRgb(183, 178, 168);
		panelMessage.color               = Color::fromRgb(0, 0, 0);
		panelImage.name                  = L"panelImage";
		panelImage.size                  = Size(164, 304);
		panelImage.layout                = Layout::Fixed2d;
		picture.name                     = L"picture";
		picture.position                 = Point(16, 24);
		picture.size                     = Size(140, 140);
		labelIcon.name                   = L"labelIcon";
		labelIcon.position               = Point(10, 44);
		labelIcon.size                   = Size(120, 40);
		labelIcon.font                   = Font(L"Philips Healthcare Font", 28, true, false, false, false, Font::Antialias::High);
		labelIcon.text                   = L"3D APC";
		labelIcon.horizontalAlign        = HAlign::Center;
		labelIcon.verticalAlign          = VAlign::Middle;
		panelText.name                   = L"panelText";
		panelText.position               = Point(180, 16);
		panelText.size                   = Size(792, 272);
		panelText.layout                 = Layout::Fill;
		panelText.layoutOuterMargin      = Margin(16, 16, 8, 16);
		panelText.layoutSpacing          = 12;
		labelMessage.name                = L"labelMessage";
		labelMessage.size                = Size(792, 83);
		labelMessage.font                = Font(L"Philips Healthcare Font", 30, true, false, false, false, Font::Antialias::High);
		labelMessage.layout              = Layout::Fill;
		labelMessage.text                = L"Create angiogram while ensuring the catheter tip is always visible";
		labelMessage.textType            = TextType::WordWrap;
		labelMessage.color               = Palette::Gray070;
		labelMessage.outline             = Palette::Black;
		labelMessage.imageSpacing        = 8;
		labelMessageSubtext.name         = L"labelMessageSubtext";
		labelMessageSubtext.position     = Point(0, 95);
		labelMessageSubtext.size         = Size(792, 82);
		labelMessageSubtext.font         = Font(L"Philips Healthcare Font", 30, false, false, false, false, Font::Antialias::High);
		labelMessageSubtext.layout       = Layout::Fill;
		labelMessageSubtext.text         = L"DO NOT move table and C-arc";
		labelMessageSubtext.textType     = TextType::WordWrap;
		labelMessageSubtext.color        = Palette::Gray070;
		labelMessageSubtext.outline      = Palette::Black;
		labelMessageSubtext.imageSpacing = 8;
		labelMessageSubtext.imageHideEmpty = false;
		labelGuidance.name               = L"labelGuidance";
		labelGuidance.position           = Point(0, 189);
		labelGuidance.size               = Size(792, 83);
		labelGuidance.font               = Font(L"Philips Healthcare Font", 30, false, false, false, false, Font::Antialias::High);
		labelGuidance.layout             = Layout::Fill;
		labelGuidance.text               = L"Capture at least 3 heartbeats with contrast filled vessels";
		labelGuidance.textType           = TextType::WordWrap;
		labelGuidance.color              = Palette::Gray070;
		labelGuidance.outline            = Palette::Black;
		labelGuidance.imageSpacing       = 8;
		labelGuidance.imageHideEmpty     = false;
		separator.name                   = L"separator";
		separator.position               = Point(8, 0);
		separator.size                   = Size(966, 2);
		separator.color1                 = Palette::Gray150;
		separator.color2                 = Palette::Transparent;
		separator2.name                  = L"separator2";
		separator2.position              = Point(8, 302);
		separator2.size                  = Size(966, 2);
		separator2.color1                = Palette::Gray150;
		separator2.color2                = Palette::Transparent;
		labelHeader.name                 = L"labelHeader";
		labelHeader.position             = Point(0, 436);
		labelHeader.size                 = Size(980, 120);
		labelHeader.font                 = Font(L"Philips Healthcare Font", 34, true, false, false, false, Font::Antialias::High);
		labelHeader.text                 = L"Roadmap ready";
		labelHeader.textType             = TextType::WordWrap;
		labelHeader.color                = Palette::Gray070;
		labelHeader.outline              = Palette::Black;
		labelHeader.horizontalAlign      = HAlign::Center;
		processing.name                  = L"processing";
		processing.position              = Point(352, 132);
		processing.size                  = Size(280, 280);
		processing.determinate           = false;
		//imageRoadmap.composerClass     = Control;
		imageRoadmap.name                = L"imageRoadmap";
		imageRoadmap.position            = Point(352, 132);
		imageRoadmap.size                = Size(280, 280);
		//imageHeader.composerClass      = Control;
		imageHeader.name                 = L"imageHeader";
		imageHeader.position             = Point(352, 132);
		imageHeader.size                 = Size(280, 280);
		//positionTarget.composerClass   = Control;
		positionTarget.name              = L"TargetPosition";
		positionTarget.position          = Point(416, 476);
		positionTarget.size              = Size(152, 64);
		positionTarget.font              = Font(L"Philips Healthcare Font", 26, false, false, false, false, Font::Antialias::High);
		positionTarget.color             = Palette::Gray070;
		layoutUpdateEnd();
		#pragma endregion
	}

	#pragma region Sense Composer (do not modify)
	public:    Panel             panelMessage;
	public:    Control           panelImage;
	public:    PictureBox        picture;
	public:    Label             labelIcon;
	public:    Control           panelText;
	public:    Label             labelMessage;
	public:    Label             labelMessageSubtext;
	public:    Label             labelGuidance;
	public:    Separator         separator;
	public:    Separator         separator2;
	public:    Label             labelHeader;
	public:    ProgressCircle    processing;
	public:    CrmThumbnail      imageRoadmap;
	public:    PciThumbnail      imageHeader;
	public:    PciXrayGeometryControl positionTarget;
	#pragma endregion

private:

	SmartSuite19InchGuidanceUi(const SmartSuite19InchGuidanceUi&);
	SmartSuite19InchGuidanceUi& operator=(const SmartSuite19InchGuidanceUi&);
};

}}}
